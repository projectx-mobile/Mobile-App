on: 
  push:
    branches: [ "master", "stage", "develop" ]
name: upload image to aws
jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_REGISTRY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_REGISTRY_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPOSITORY_NAME }}
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile . 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Scan Docker image
        id: docker-scan
        uses: alexjurkiewicz/ecr-scan-image@v1.7.0
        with:
          repository: ${{ secrets.REPOSITORY_NAME }}
          tag:  ${{ github.ref_name }}
          fail_threshold: critical
      - run: echo "${{ steps.docker-scan.outputs.total }} total vulnerabilities."
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: update host image 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_HOST_USERNAME }}
          password: ${{ secrets.DEPLOY_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOY_HOST_PORT }}
          script: | 
            sudo docker-compose -f ${{ secrets.path }} pull
            sudo docker-compose -f ${{ secrets.path }} up -d --remove-orphans
